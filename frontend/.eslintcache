[{"E:\\Projects\\Library-Management-System-with-MERN\\frontend\\src\\index.js":"1","E:\\Projects\\Library-Management-System-with-MERN\\frontend\\src\\App.js":"2","E:\\Projects\\Library-Management-System-with-MERN\\frontend\\src\\components\\Table\\Table.js":"3","E:\\Projects\\Library-Management-System-with-MERN\\frontend\\src\\components\\Search\\Search.js":"4","E:\\Projects\\Library-Management-System-with-MERN\\frontend\\src\\components\\Header\\Header.js":"5","E:\\Projects\\Library-Management-System-with-MERN\\frontend\\src\\components\\Loading\\Loading.js":"6","E:\\Projects\\Library-Management-System-with-MERN\\frontend\\src\\components\\Pages\\Grid.js":"7","E:\\Projects\\Library-Management-System-with-MERN\\frontend\\src\\components\\AddNewBook\\AddNewBook.js":"8","E:\\Projects\\Library-Management-System-with-MERN\\frontend\\src\\components\\MoreInfo\\MoreInfo.js":"9","E:\\Projects\\Library-Management-System-with-MERN\\frontend\\src\\components\\EditBook\\EditBook.js":"10"},{"size":206,"mtime":1613450875084,"results":"11","hashOfConfig":"12"},{"size":2222,"mtime":1618372479670,"results":"13","hashOfConfig":"12"},{"size":10761,"mtime":1618372724621,"results":"14","hashOfConfig":"12"},{"size":6139,"mtime":1618372451915,"results":"15","hashOfConfig":"12"},{"size":7293,"mtime":1618371788065,"results":"16","hashOfConfig":"12"},{"size":399,"mtime":1613239145677,"results":"17","hashOfConfig":"12"},{"size":2810,"mtime":1613370557886,"results":"18","hashOfConfig":"12"},{"size":6853,"mtime":1618210789345,"results":"19","hashOfConfig":"12"},{"size":1375,"mtime":1618223860795,"results":"20","hashOfConfig":"12"},{"size":7317,"mtime":1618372523327,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"tga6oi",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"24"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"24"},"E:\\Projects\\Library-Management-System-with-MERN\\frontend\\src\\index.js",[],["50","51"],"E:\\Projects\\Library-Management-System-with-MERN\\frontend\\src\\App.js",["52"],"import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Header from \"./components/Header/Header.js\";\r\nimport Search from \"./components/Search/Search.js\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Table from \"./components/Table/Table.js\";\r\nimport AddNewBook from \"./components/AddNewBook/AddNewBook.js\";\r\nimport \"./app.css\";\r\nimport EditBook from \"./components/EditBook/EditBook.js\";\r\nimport MoreInfo from \"./components/MoreInfo/MoreInfo.js\";\r\nconst App = () => {\r\n  let searchedBooks;\r\n  const [data, setData] = useState([]);\r\n  const [displayBooks, setDisplayedBooks] = useState([]);\r\n  const [clickedBook, setClickedBook] = useState();\r\n  const [loading, setLoading] = useState(\"block\");\r\n  // console.log(clickedBook)\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/books\")\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setData(response.data);\r\n        setDisplayedBooks(response.data);\r\n        setLoading(\"none\");\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n    if (!searchedBooks) {\r\n      setDisplayedBooks(data);\r\n      \r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Header />\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Search\r\n              data={data}\r\n              displayBooks={displayBooks}\r\n              setLoading={setLoading}\r\n              setDisplayedBooks={setDisplayedBooks}\r\n            />\r\n            {/* {loading === \"block\" ? \r\n              <Loading loading={loading} />\r\n             : \r\n              <Table data={displayBooks} />\r\n            } */}\r\n\r\n            <Table\r\n              loading={loading}\r\n              data={displayBooks}\r\n              setClickedBook={setClickedBook}\r\n            />\r\n          </Route>\r\n          <Route path=\"/add-new-book\">\r\n            <AddNewBook />\r\n          </Route>\r\n          <Route path=\"/more-info\">\r\n            <MoreInfo clickedBook={clickedBook} />\r\n          </Route>\r\n          <Route path=\"/edit-book\">\r\n            <EditBook clickedBook={clickedBook} />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","E:\\Projects\\Library-Management-System-with-MERN\\frontend\\src\\components\\Table\\Table.js",["53"],"E:\\Projects\\Library-Management-System-with-MERN\\frontend\\src\\components\\Search\\Search.js",["54","55"],"import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport * as ReactBootstrap from \"react-bootstrap\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"./Search.css\";\r\nimport axios from \"axios\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    marginTop: theme.spacing(2),\r\n    marginLeft: theme.spacing(5),\r\n    minWidth: 220,\r\n  },\r\n  keywordBox: {\r\n    padding: theme.spacing(0),\r\n    marginRight: theme.spacing(3),\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(2),\r\n    marginLeft: theme.spacing(5),\r\n    marginBottom: theme.spacing(3),\r\n    borderRadius: 4,\r\n    border: \"1px solid #757575\",\r\n    color: \"black\",\r\n    height: 56,\r\n    padding: \"0 40px\",\r\n    boxShadow: \"0 3px 5px 2px var(--box-shadow)\",\r\n  },\r\n}));\r\n\r\nconst Search = (props) => {\r\n  // const [data, setDisplayedBooks] =useContext(BookContext);\r\n  let { data, setDisplayedBooks,setLoading } = props;\r\n  const classes = useStyles();\r\n  const [filterOption, setFilterOption] = useState();\r\n  const [autoCompleteValue, setAutoCompleteValue] = useState();\r\n  const [hint, setHint] = useState([]);\r\n  let searchResult;\r\n\r\n  const handleHint = (filterOption, keyword) => {\r\n    if (keyword === \"\") {\r\n      setHint([])\r\n      return;\r\n    }\r\n    \r\n    axios\r\n      .get(\"/books/hints/\"+filterOption+\"/\"+keyword)\r\n      .then((response) => {\r\n        // console.log(response.data.slice(0, 5));\r\n        setHint(response.data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  \r\n  const handleSearchResult = () => {\r\n    console.log(filterOption, autoCompleteValue);\r\n    setLoading(\"block\");\r\n    axios\r\n      .get(\"/books/searchResult/\" + filterOption + \"/\" + autoCompleteValue)\r\n      .then((response) => {\r\n        console.log(response);\r\n        setDisplayedBooks(response.data);\r\n        setLoading(\"none\");\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n\r\n\r\n\r\n    // searchResult = data\r\n    //   .slice(0, 300)\r\n    //   .filter(`(item) => item.${filterOption} === ${autoCompleteValue}`);  \r\n    \r\n    // switch (filterOption) {\r\n    //   // case \"everywhere\":\r\n    //   //   searchResult = [];\r\n    //   //   break;\r\n    //   case \"title\":\r\n    //     searchResult = data\r\n    //       .filter((item) => item.title === autoCompleteValue);\r\n    //     break;\r\n    //   case \"writer\":\r\n    //     searchResult = data\r\n    //       .filter((item) => item.writer === autoCompleteValue);\r\n    //     break;\r\n    //   case \"publisher\":\r\n    //     searchResult = data\r\n    //       .filter((item) => item.publisher === autoCompleteValue);\r\n    //     break;\r\n    //   case \"category\":\r\n    //     searchResult = data\r\n    //       .filter((item) => item.category === autoCompleteValue);\r\n    //     break;\r\n    //   case \"almira\":\r\n    //     searchResult = data\r\n    //       .filter((item) => item.almira === autoCompleteValue);\r\n    //     break;\r\n    //   case \"isbn\":\r\n    //     searchResult = data\r\n    //       .filter((item) => item.isbn === autoCompleteValue);\r\n    //     break;\r\n    //   default:\r\n    //     break;\r\n    // }\r\n    // console.log(searchResult);\r\n    // // // getSearchResult(searchResult)\r\n    // setDisplayedBooks(searchResult);\r\n  };\r\n\r\n  return (\r\n    <div className=\"pt-2\">\r\n      <br />\r\n      <ReactBootstrap.Container>\r\n        <ReactBootstrap.Row>\r\n          <ReactBootstrap.Col xs={12} sm={6} md={6} lg={4}>\r\n            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                Filter Option\r\n              </InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-outlined-label\"\r\n                id=\"demo-simple-select-outlined\"\r\n                onChange={(event) => {setFilterOption(event.target.value)                }}\r\n                label=\"Select Filter Option\"\r\n              >\r\n                {/* <MenuItem value={\"everywhere\"}>Search Everywhere</MenuItem> */}\r\n                <MenuItem value={\"title\"}>Book title</MenuItem>\r\n                <MenuItem value={\"writer\"}>Writer</MenuItem>\r\n                <MenuItem value={\"category\"}>Category</MenuItem>\r\n                <MenuItem value={\"publisher\"}>Publisher</MenuItem>\r\n                {/* <MenuItem value={\"almira\"}>Almira</MenuItem>\r\n                <MenuItem value={\"isbn\"}>ISBN</MenuItem> */}\r\n              </Select>\r\n            </FormControl>\r\n          </ReactBootstrap.Col>\r\n          <ReactBootstrap.Col xs={12} sm={6} md={6} lg={4}>\r\n            <Autocomplete\r\n              options={hint}\r\n              className={classes.keywordBox}\r\n              freeSolo\r\n              id=\"free-solo-2-demo\"\r\n              disableClearable\r\n              onChange={(event, newValue) => {\r\n                setAutoCompleteValue(newValue);\r\n              }}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Enter the keyword\"\r\n                  margin=\"normal\"\r\n                  variant=\"outlined\"\r\n                  onChange={(event) => {\r\n                    // setAutoCompleteValue(event.target.value)\r\n                    console.log(filterOption, event.target.value);\r\n                    handleHint(filterOption,event.target.value);\r\n                  }}\r\n                />\r\n              )}\r\n            />\r\n          </ReactBootstrap.Col>\r\n          <ReactBootstrap.Col xs={12} sm={12} md={12} lg={4}>\r\n            <Button className={classes.button} onClick={() => handleSearchResult()}>\r\n              Search\r\n            </Button>\r\n          </ReactBootstrap.Col>\r\n        </ReactBootstrap.Row>\r\n      </ReactBootstrap.Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","E:\\Projects\\Library-Management-System-with-MERN\\frontend\\src\\components\\Header\\Header.js",["56","57","58","59","60","61","62"],"import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport { FormGroup } from \"@material-ui/core\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\nimport { Router, Route, Link } from \"react-router-dom\";\r\nimport AddNewBook from \"../AddNewBook/AddNewBook\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport Add from \"../AddNewBook/AddNewBook.js\";\r\nimport orange from \"@material-ui/core/colors/orange\";\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  palette: {\r\n    primary: orange,\r\n    secondary: orange,\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    background: orange\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: { width: \"inherit\" },\r\n  Link: {\r\n    textDecoration: \"none\",\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n\r\n  drawerHeader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n}));\r\n\r\nexport default function PersistentDrawerLeft() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const reload = () => {\r\n    window.location.reload(false);\r\n  }\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const [toogle,setToogle] = React.useState(true)\r\n  const handleChange = (event) => {\r\n    setToogle(event.target.checked)\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        style={{ background: \"#2E3B55\" }}\r\n        position=\"absolute\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, open && classes.hide)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          {/* <Link\r\n            to=\"/\"\r\n            className={classes.link}\r\n            style={{ textDecoration: \"none\", color: \"white\" }}\r\n          > */}\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            <Link\r\n              to=\"/\"\r\n              onClick={reload}\r\n              className={classes.link}\r\n              style={{ textDecoration: \"none\", color: \"white\" }}\r\n            >\r\n              আব্দুল জলিল সাহিত্য ও সাংস্কৃতিক কেন্দ্র\r\n            </Link>\r\n          </Typography>\r\n          {/* </Link> */}\r\n          <FormGroup>\r\n            <FormControlLabel\r\n              control={<Switch checked={toogle} onChange={handleChange} />}\r\n              label={toogle ? \"বই\" : \"ডিস্ক\"}\r\n            />\r\n          </FormGroup>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === \"ltr\" ? (\r\n              <ChevronLeftIcon />\r\n            ) : (\r\n              <ChevronRightIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n\r\n        <Divider />\r\n\r\n        <List>\r\n          <Link\r\n            onClick={handleDrawerClose}\r\n            style={{ textDecoration: \"none\", color: \"black\" }}\r\n            to=\"/\"\r\n            className={classes.link}\r\n          >\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                <HomeIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary={\"Home\"} />\r\n            </ListItem>\r\n          </Link>\r\n          <Link\r\n            onClick={handleDrawerClose}\r\n            style={{ textDecoration: \"none\", color: \"black\" }}\r\n            to=\"/add-new-book\"\r\n          >\r\n            <ListItem button key=\"Add new book\">\r\n              <ListItemIcon>\r\n                <AddCircleOutlineIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Add new book\" />\r\n            </ListItem>\r\n          </Link>\r\n\r\n          <Link\r\n            onClick={handleDrawerClose}\r\n            style={{ textDecoration: \"none\", color: \"black\" }}\r\n            to=\"/about\"\r\n            className={classes.link}\r\n          >\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                <InfoIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary={\"About\"} />\r\n            </ListItem>\r\n          </Link>\r\n        </List>\r\n      </Drawer>\r\n      <main\r\n        className={clsx(classes.content, {\r\n          [classes.contentShift]: open,\r\n        })}\r\n      ></main>\r\n    </div>\r\n  );\r\n}\r\n","E:\\Projects\\Library-Management-System-with-MERN\\frontend\\src\\components\\Loading\\Loading.js",[],"E:\\Projects\\Library-Management-System-with-MERN\\frontend\\src\\components\\Pages\\Grid.js",[],["63","64"],"E:\\Projects\\Library-Management-System-with-MERN\\frontend\\src\\components\\AddNewBook\\AddNewBook.js",["65","66","67"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Form, Field } from \"react-final-form\";\r\nimport { TextField } from \"final-form-material-ui\";\r\nimport {\r\n  Typography,\r\n  Paper,\r\n  Link,\r\n  Grid,\r\n  Button,\r\n  CssBaseline,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\n\r\nconst onSubmit = async (values) => {\r\n  const sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\r\n  await sleep(300);\r\n  window.alert(JSON.stringify(values, 0, 2));\r\n  console.log(values);\r\n  // axios\r\n  //   .post(\"http://localhost:5000/add-new-book\", {values})\r\n  //   .then((res) => {\r\n  //     console.log(res)\r\n  //     window.alert(res.title + \" added to database!\");\r\n  //   })\r\n  //   .catch((err) => console.log(err));\r\n\r\n  fetch(\"http://localhost:5000/add-new-book\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(values),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n      console.log(data);\r\n      window.alert(data.title+ \" added to database!\");\r\n    });\r\n};\r\nconst validate = (values) => {\r\n  const errors = {};\r\n  if (!values.title) {\r\n    errors.title = \"Required\";\r\n  }\r\n  if (!values.writer) {\r\n    errors.writer = \"Required\";\r\n  }\r\n  if (!values.category) {\r\n    errors.email = \"Required\";\r\n  }\r\n  if (!values.publisher) {\r\n    errors.publisher = \"Required\";\r\n  }\r\n  return errors;\r\n};\r\nconst postNewBook = async (values) => {\r\n  console.log({ values });\r\n};\r\nfunction Add() {\r\n  return (\r\n    <div style={{ padding: 16, margin: \"auto\", maxWidth: 600 }}>\r\n      <CssBaseline />\r\n      <br />\r\n      <Typography variant=\"h4\" align=\"center\" component=\"h1\" gutterBottom>\r\n        নতুন বই এর তথ্য দিন\r\n      </Typography>\r\n\r\n      <Form\r\n        onSubmit={onSubmit}\r\n        validate={validate}\r\n        render={({ handleSubmit, reset, submitting, pristine, values }) => (\r\n          <form onSubmit={handleSubmit} noValidate>\r\n            <Paper style={{ padding: 16 }}>\r\n              <Grid\r\n                style={{ padding: 10, margin: \"auto\", maxWidth: 400 }}\r\n                container\r\n                alignItems=\"flex-start\"\r\n                spacing={2}\r\n              >\r\n                <Grid item xs={12} lg={12}>\r\n                  <Field\r\n                    fullWidth\r\n                    required\r\n                    name=\"title\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"বইয়ের নাম\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} lg={12}>\r\n                  <Field\r\n                    fullWidth\r\n                    required\r\n                    name=\"writer\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"লেখক/লেখিকা\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} lg={12}>\r\n                  <Field\r\n                    fullWidth\r\n                    required\r\n                    name=\"category\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"ক্যাটাগরি\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} lg={12}>\r\n                  <Field\r\n                    fullWidth\r\n                    required\r\n                    name=\"publisher\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"প্রকাশনী\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} lg={12}>\r\n                  <Field\r\n                    fullWidth\r\n                    name=\"description\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"সংক্ষিপ্ত বর্ণ্না\"\r\n                    multiline\r\n                    rows={4}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <Field\r\n                    id=\"standard-basic\"\r\n                    label=\"আলমারি নং\"\r\n                    name=\"almira\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <Field\r\n                    id=\"standard-basic\"\r\n                    label=\"তাক নং\"\r\n                    name=\"shelf\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={6}>\r\n                  <Field\r\n                    id=\"standard-basic\"\r\n                    label=\"আইএসবিএন\"\r\n                    name=\"isbn\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <Field\r\n                    id=\"standard-basic\"\r\n                    label=\"প্রকাশের সাল\"\r\n                    name=\"yearOfPublication\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <Field\r\n                    id=\"standard-basic\"\r\n                    label=\"মোট পৃষ্ঠা সংখ্যা\"\r\n                    name=\"totalPage\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <Field\r\n                    id=\"standard-basic\"\r\n                    label=\"দাম\"\r\n                    name=\"price\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                  />\r\n                </Grid>\r\n                <Grid item style={{ marginTop: 16 }}>\r\n                  <Button\r\n                    type=\"button\"\r\n                    variant=\"contained\"\r\n                    onClick={reset}\r\n                    disabled={submitting || pristine}\r\n                  >\r\n                    Reset\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item style={{ marginTop: 16 }}>\r\n                  <Link to={\"/post-new-book\"}>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      type=\"submit\"\r\n                      disabled={submitting}\r\n                    >\r\n                      Submit\r\n                    </Button>\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </Paper>\r\n          </form>\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Add;\r\n","E:\\Projects\\Library-Management-System-with-MERN\\frontend\\src\\components\\MoreInfo\\MoreInfo.js",["68","69","70","71","72"],"import React from 'react';\r\nimport {\r\n  Typography,\r\n  Paper,\r\n  Link,\r\n  Grid,\r\n  Button,\r\n  CssBaseline,\r\n} from \"@material-ui/core\";\r\nconst MoreInfo = (props) => {\r\n    let {\r\n      title,\r\n      writer,\r\n      category,\r\n      publisher,\r\n      almira,\r\n      shelf,\r\n      isbn,\r\n      totalPage,\r\n      yearOfPublication,\r\n      description,\r\n    price } = props.clickedBook;\r\n  console.log(title);\r\n    return (\r\n      <div style={{ padding: 16, margin: \"auto\", maxWidth: 700 }}>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <Paper style={{ padding: 16, textAlign: \"center\", lineHeight: \"22px\"}}>\r\n          <h4>বইয়ের নামঃ {title}</h4>\r\n          <h4>লেখক/লেখিকাঃ {writer}</h4>\r\n          <h6>ক্যাটাগরিঃ {category}</h6>\r\n          <h6>প্রকাশনীঃ {publisher}</h6>\r\n          <h6>আলমারি নং {almira}</h6>\r\n          <h6>তাক নং {shelf}</h6>\r\n          <h6>সংক্ষিপ্ত বিবরনীঃ {description}</h6>\r\n          <h6>প্রকাশকাল(সাল) ঃ {yearOfPublication}</h6>\r\n          <h6>আইএসবিএনঃ {isbn}</h6>\r\n          <h6>মোট পৃষ্ঠাসংখ্যাঃ {totalPage}</h6>\r\n          <h6>দামঃ {price}</h6>\r\n        </Paper>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default MoreInfo;","E:\\Projects\\Library-Management-System-with-MERN\\frontend\\src\\components\\EditBook\\EditBook.js",["73","74","75","76","77","78","79","80","81"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Form, Field } from \"react-final-form\";\r\nimport { TextField } from \"final-form-material-ui\";\r\nimport {\r\n  Typography,\r\n  Paper,\r\n  Link,\r\n  Grid,\r\n  Button,\r\n  CssBaseline,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\nconst validate = (values) => {\r\n  const errors = {};\r\n  if (!values.title) {\r\n    errors.title = \"Required\";\r\n  }\r\n  if (!values.writer) {\r\n    errors.writer = \"Required\";\r\n  }\r\n  if (!values.category) {\r\n    errors.email = \"Required\";\r\n  }\r\n  if (!values.publisher) {\r\n    errors.publisher = \"Required\";\r\n  }\r\n  return errors;\r\n};\r\n\r\nfunction Add(props) {\r\n  \r\n  const {\r\n    id,\r\n    title,\r\n    writer,\r\n    category,\r\n    publisher,\r\n    almira,\r\n    shelf,\r\n    isbn,\r\n    totalPage,\r\n    yearOfPublication,\r\n    description,\r\n    price,\r\n  } = props.clickedBook;\r\n// console.log(props.clickedBook);\r\nconst onSubmit = async (values) => {\r\n  const sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\r\n  await sleep(300);\r\n  window.alert(JSON.stringify(values, 0, 2));\r\n  console.log(values);\r\n  // console.log(id);\r\n\r\n  fetch(\"http://localhost:5000/books/edit/\" + id, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(values),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n      // console.log(data);\r\n      window.alert(data.title + \" Edited!\");\r\n    });\r\n  };\r\n  \r\n  return (\r\n    <div style={{ padding: 16, margin: \"auto\", maxWidth: 600 }}>\r\n      <CssBaseline />\r\n      <br />\r\n      <Typography variant=\"h4\" align=\"center\" component=\"h1\" gutterBottom>\r\n        বই এর তথ্য পরিবর্তন করুন\r\n      </Typography>\r\n\r\n      <Form\r\n        onSubmit={onSubmit}\r\n        validate={validate}\r\n        render={({ handleSubmit, reset, submitting, pristine, values }) => (\r\n          <form onSubmit={handleSubmit} noValidate>\r\n            <Paper style={{ padding: 16 }}>\r\n              <Grid\r\n                style={{ padding: 10, margin: \"auto\", maxWidth: 400 }}\r\n                container\r\n                alignItems=\"flex-start\"\r\n                spacing={2}\r\n              >\r\n                <Grid item xs={12} lg={12}>\r\n                  <Field\r\n                    fullWidth\r\n                    required\r\n                    name=\"title\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"বইয়ের নাম\"\r\n                    defaultValue={title}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} lg={12}>\r\n                  <Field\r\n                    fullWidth\r\n                    required\r\n                    name=\"writer\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"লেখক/লেখিকা\"\r\n                    defaultValue={writer}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} lg={12}>\r\n                  <Field\r\n                    fullWidth\r\n                    required\r\n                    name=\"category\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"ক্যাটাগরি\"\r\n                    defaultValue={category}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} lg={12}>\r\n                  <Field\r\n                    fullWidth\r\n                    required\r\n                    name=\"publisher\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"প্রকাশনী\"\r\n                    defaultValue={publisher}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} lg={12}>\r\n                  <Field\r\n                    fullWidth\r\n                    name=\"description\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"সংক্ষিপ্ত বর্ণ্না\"\r\n                    multiline\r\n                    rows={4}\r\n                    defaultValue={\"N/A\"}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <Field\r\n                    id=\"standard-basic\"\r\n                    label=\"আলমারি নং\"\r\n                    name=\"almira\"\r\n                    component={TextField}\r\n                    // type=\"number\"\r\n                    defaultValue={\"N/A\"}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <Field\r\n                    id=\"standard-basic\"\r\n                    label=\"তাক নং\"\r\n                    name=\"shelf\"\r\n                    component={TextField}\r\n                    // type=\"number\"\r\n                    defaultValue={\"N/A\"}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={6}>\r\n                  <Field\r\n                    id=\"standard-basic\"\r\n                    label=\"আইএসবিএন\"\r\n                    name=\"isbn\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    defaultValue={\"N/A\"}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <Field\r\n                    id=\"standard-basic\"\r\n                    label=\"প্রকাশের সাল\"\r\n                    name=\"yearOfPublication\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    defaultValue={\"N/A\"}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <Field\r\n                    id=\"standard-basic\"\r\n                    label=\"মোট পৃষ্ঠা সংখ্যা\"\r\n                    name=\"totalPage\"\r\n                    component={TextField}\r\n                    // type=\"number\"\r\n                    defaultValue={\"N/A\"}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <Field\r\n                    id=\"standard-basic\"\r\n                    label=\"দাম\"\r\n                    name=\"price\"\r\n                    component={TextField}\r\n                    // type=\"number\"\r\n                    defaultValue={\"N/A\"}\r\n                  />\r\n                </Grid>\r\n                <Grid item style={{ marginTop: 16 }}>\r\n                  <Button\r\n                    type=\"button\"\r\n                    variant=\"contained\"\r\n                    onClick={reset}\r\n                    disabled={submitting || pristine}\r\n                  >\r\n                    Reset\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item style={{ marginTop: 16 }}>\r\n                  <Link to={\"/\"}>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      type=\"submit\"\r\n                      disabled={submitting}\r\n                    >\r\n                      Submit\r\n                    </Button>\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </Paper>\r\n          </form>\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Add;\r\n",{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":34,"column":6,"nodeType":"88","endLine":34,"endColumn":8,"suggestions":"89"},{"ruleId":"90","severity":1,"message":"91","line":1,"column":17,"nodeType":"92","messageId":"93","endLine":1,"endColumn":25},{"ruleId":"90","severity":1,"message":"94","line":40,"column":9,"nodeType":"92","messageId":"93","endLine":40,"endColumn":13},{"ruleId":"90","severity":1,"message":"95","line":45,"column":7,"nodeType":"92","messageId":"93","endLine":45,"endColumn":19},{"ruleId":"90","severity":1,"message":"96","line":18,"column":8,"nodeType":"92","messageId":"93","endLine":18,"endColumn":17},{"ruleId":"90","severity":1,"message":"97","line":19,"column":8,"nodeType":"92","messageId":"93","endLine":19,"endColumn":16},{"ruleId":"90","severity":1,"message":"98","line":24,"column":10,"nodeType":"92","messageId":"93","endLine":24,"endColumn":16},{"ruleId":"90","severity":1,"message":"99","line":24,"column":18,"nodeType":"92","messageId":"93","endLine":24,"endColumn":23},{"ruleId":"90","severity":1,"message":"100","line":25,"column":8,"nodeType":"92","messageId":"93","endLine":25,"endColumn":18},{"ruleId":"90","severity":1,"message":"101","line":26,"column":10,"nodeType":"92","messageId":"93","endLine":26,"endColumn":30},{"ruleId":"90","severity":1,"message":"102","line":29,"column":8,"nodeType":"92","messageId":"93","endLine":29,"endColumn":11},{"ruleId":"82","replacedBy":"103"},{"ruleId":"84","replacedBy":"104"},{"ruleId":"90","severity":1,"message":"105","line":2,"column":8,"nodeType":"92","messageId":"93","endLine":2,"endColumn":16},{"ruleId":"90","severity":1,"message":"106","line":13,"column":8,"nodeType":"92","messageId":"93","endLine":13,"endColumn":13},{"ruleId":"90","severity":1,"message":"107","line":57,"column":7,"nodeType":"92","messageId":"93","endLine":57,"endColumn":18},{"ruleId":"90","severity":1,"message":"108","line":3,"column":3,"nodeType":"92","messageId":"93","endLine":3,"endColumn":13},{"ruleId":"90","severity":1,"message":"109","line":5,"column":3,"nodeType":"92","messageId":"93","endLine":5,"endColumn":7},{"ruleId":"90","severity":1,"message":"110","line":6,"column":3,"nodeType":"92","messageId":"93","endLine":6,"endColumn":7},{"ruleId":"90","severity":1,"message":"111","line":7,"column":3,"nodeType":"92","messageId":"93","endLine":7,"endColumn":9},{"ruleId":"90","severity":1,"message":"112","line":8,"column":3,"nodeType":"92","messageId":"93","endLine":8,"endColumn":14},{"ruleId":"90","severity":1,"message":"105","line":2,"column":8,"nodeType":"92","messageId":"93","endLine":2,"endColumn":16},{"ruleId":"90","severity":1,"message":"106","line":13,"column":8,"nodeType":"92","messageId":"93","endLine":13,"endColumn":13},{"ruleId":"90","severity":1,"message":"113","line":42,"column":5,"nodeType":"92","messageId":"93","endLine":42,"endColumn":11},{"ruleId":"90","severity":1,"message":"114","line":43,"column":5,"nodeType":"92","messageId":"93","endLine":43,"endColumn":10},{"ruleId":"90","severity":1,"message":"115","line":44,"column":5,"nodeType":"92","messageId":"93","endLine":44,"endColumn":9},{"ruleId":"90","severity":1,"message":"116","line":45,"column":5,"nodeType":"92","messageId":"93","endLine":45,"endColumn":14},{"ruleId":"90","severity":1,"message":"117","line":46,"column":5,"nodeType":"92","messageId":"93","endLine":46,"endColumn":22},{"ruleId":"90","severity":1,"message":"118","line":47,"column":5,"nodeType":"92","messageId":"93","endLine":47,"endColumn":16},{"ruleId":"90","severity":1,"message":"119","line":48,"column":5,"nodeType":"92","messageId":"93","endLine":48,"endColumn":10},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'data' and 'searchedBooks'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setDisplayedBooks' needs the current value of 'data'.","ArrayExpression",["122"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","'searchResult' is defined but never used.","'InboxIcon' is defined but never used.","'MailIcon' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'AddNewBook' is defined but never used.","'createBrowserHistory' is defined but never used.","'Add' is defined but never used.",["120"],["121"],"'ReactDOM' is defined but never used.","'axios' is defined but never used.","'postNewBook' is assigned a value but never used.","'Typography' is defined but never used.","'Link' is defined but never used.","'Grid' is defined but never used.","'Button' is defined but never used.","'CssBaseline' is defined but never used.","'almira' is assigned a value but never used.","'shelf' is assigned a value but never used.","'isbn' is assigned a value but never used.","'totalPage' is assigned a value but never used.","'yearOfPublication' is assigned a value but never used.","'description' is assigned a value but never used.","'price' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"123","fix":"124"},"Update the dependencies array to be: [data, searchedBooks]",{"range":"125","text":"126"},[1177,1179],"[data, searchedBooks]"]