[{"E:\\Projects\\Library-Management-System-with-MERN\\frontend\\src\\index.js":"1","E:\\Projects\\Library-Management-System-with-MERN\\frontend\\src\\App.js":"2","E:\\Projects\\Library-Management-System-with-MERN\\frontend\\src\\components\\Table\\Table.js":"3","E:\\Projects\\Library-Management-System-with-MERN\\frontend\\src\\components\\Search\\Search.js":"4","E:\\Projects\\Library-Management-System-with-MERN\\frontend\\src\\components\\Header\\Header.js":"5","E:\\Projects\\Library-Management-System-with-MERN\\frontend\\src\\components\\Loading\\Loading.js":"6","E:\\Projects\\Library-Management-System-with-MERN\\frontend\\src\\components\\Details\\Details.js":"7","E:\\Projects\\Library-Management-System-with-MERN\\frontend\\src\\components\\Pages\\Grid.js":"8","E:\\Projects\\Library-Management-System-with-MERN\\frontend\\src\\components\\AddNewBook\\AddNewBook.js":"9","E:\\Projects\\Library-Management-System-with-MERN\\frontend\\src\\components\\Search\\Search2.js":"10","E:\\Projects\\Library-Management-System-with-MERN\\frontend\\src\\components\\MoreInfo\\MoreInfo.js":"11","E:\\Projects\\Library-Management-System-with-MERN\\frontend\\src\\components\\Search\\Search3.js":"12","E:\\Projects\\Library-Management-System-with-MERN\\frontend\\src\\components\\EditBook\\EditBook.js":"13","E:\\Projects\\Library-Management-System-with-MERN\\frontend\\src\\components\\EditBook\\EditBook2.js":"14"},{"size":206,"mtime":1613450875084,"results":"15","hashOfConfig":"16"},{"size":2240,"mtime":1618209852994,"results":"17","hashOfConfig":"16"},{"size":10908,"mtime":1618228769627,"results":"18","hashOfConfig":"16"},{"size":8253,"mtime":1616149920050,"results":"19","hashOfConfig":"16"},{"size":7103,"mtime":1618074903924,"results":"20","hashOfConfig":"16"},{"size":399,"mtime":1613239145677,"results":"21","hashOfConfig":"16"},{"size":605,"mtime":1613274068458,"results":"22","hashOfConfig":"16"},{"size":2810,"mtime":1613370557886,"results":"23","hashOfConfig":"16"},{"size":6853,"mtime":1618210789345,"results":"24","hashOfConfig":"16"},{"size":4829,"mtime":1615969608259,"results":"25","hashOfConfig":"16"},{"size":1375,"mtime":1618223860795,"results":"26","hashOfConfig":"16"},{"size":6068,"mtime":1618230079864,"results":"27","hashOfConfig":"16"},{"size":7645,"mtime":1618209704302,"results":"28","hashOfConfig":"16"},{"size":7317,"mtime":1618242188932,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"tga6oi",{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"32"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Projects\\Library-Management-System-with-MERN\\frontend\\src\\index.js",[],["69","70"],"E:\\Projects\\Library-Management-System-with-MERN\\frontend\\src\\App.js",["71","72"],"import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Header from \"./components/Header/Header.js\";\r\nimport Search from \"./components/Search/Search3.js\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Table from \"./components/Table/Table.js\";\r\nimport AddNewBook from \"./components/AddNewBook/AddNewBook.js\";\r\nimport \"./app.css\";\r\nimport Search2 from \"./components/Search/Search2.js\";\r\nimport EditBook from \"./components/EditBook/EditBook2.js\";\r\nimport MoreInfo from \"./components/MoreInfo/MoreInfo.js\";\r\nconst App = () => {\r\n  let searchedBooks;\r\n  const [data, setData] = useState([]);\r\n  const [displayBooks, setDisplayedBooks] = useState([]);\r\n  const [clickedBook, setClickedBook] = useState();\r\n  const [loading, setLoading] = useState(\"block\");\r\n  // console.log(clickedBook)\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/books\")\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setData(response.data);\r\n        setDisplayedBooks(response.data);\r\n        setLoading(\"none\");\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n    if (!searchedBooks) {\r\n      setDisplayedBooks(data);\r\n      \r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Header />\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Search\r\n              data={data}\r\n              displayBooks={displayBooks}\r\n              setDisplayedBooks={setDisplayedBooks}\r\n            />\r\n            {/* {loading === \"block\" ? \r\n              <Loading loading={loading} />\r\n             : \r\n              <Table data={displayBooks} />\r\n            } */}\r\n\r\n            <Table\r\n              loading={loading}\r\n              data={displayBooks}\r\n              setClickedBook={setClickedBook}\r\n            />\r\n          </Route>\r\n          <Route path=\"/add-new-book\">\r\n            <AddNewBook />\r\n          </Route>\r\n          <Route path=\"/more-info\">\r\n            <MoreInfo clickedBook={clickedBook} />\r\n          </Route>\r\n          <Route path=\"/edit-book\">\r\n            <EditBook clickedBook={clickedBook} />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","E:\\Projects\\Library-Management-System-with-MERN\\frontend\\src\\components\\Table\\Table.js",["73","74","75","76"],"import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport * as ReactBootstrap from \"react-bootstrap\";\r\nimport Loading from \"../Loading/Loading.js\";\r\nimport Details from \"../Details/Details.js\";\r\nimport PropTypes from \"prop-types\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\n// const useStyles = makeStyles((theme) => ({\r\n//   typography: {\r\n//     padding: theme.spacing(2),\r\n//   },\r\n// }));\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\n\r\nexport default function StickyHeadTable(props) {\r\n  const [openDialogue, setOpenDialogue] = React.useState(false);\r\n\r\n  const handleClickOpenDialogue = () => {\r\n    setOpenDialogue(true);\r\n  };\r\n\r\n  const handleCloseDialogue = () => {\r\n    setOpenDialogue(false);\r\n  };\r\n\r\n  let { setClickedBook } = props;\r\n  \r\n\r\n  \r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n    },\r\n    container: {\r\n      maxHeight: 500,\r\n    },\r\n    fab: {\r\n      margin: theme.spacing.unit,\r\n    },\r\n    extendedIcon: {\r\n      marginRight: theme.spacing.unit,\r\n    },\r\n    \r\n  }));\r\n\r\n  //let data = props.data;\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    console.log(id,);\r\n    setOpenDialogue(false)\r\n    axios\r\n      .delete(\"/books/delete/\" + id)\r\n      .then((response) => {\r\n        console.log(response.data.title + \" deleted successfully!\");\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n  // console.log(data);\r\n  // console.log(props.data);\r\n\r\n  const columns = [\r\n    { id: \"title\", label: \"বই\", align: \"left\" },\r\n    { id: \"writer\", label: \"লেখক/লেখিকা\", align: \"left\" },\r\n    { id: \"category\", label: \"ক্যাটাগরি\", align: \"left\" },\r\n    { id: \"publisher\", label: \"প্রকাশনী\", align: \"left\" },\r\n    { id: \"almira\", label: \"আলমারি নং\", align: \"center\" },\r\n    { id: \"shelf\", label: \"তাক নং\", align: \"center\" },\r\n    // { id: \"moreInfo\", label: \"More info\", align: \"center\" },\r\n    // { id: \"isbn\", label: \"ISBN\", align: \"center\" },\r\n    // { id: \"totalPage\", label: \"Total Page\", align: \"center\" },\r\n    // { id: \"yearOfPublication\", label: \"Year Of Publication\", align: \"center\" },\r\n    // { id: \"description\", label: \"Description\", align: \"center\" },\r\n    // { id: \"price\", label: \"Price\", align: \"center\" },\r\n    // { id: \"action\", label: \"Action\", align: \"center\" },\r\n  ];\r\n\r\n\r\n\r\n  function createData(\r\n    id,\r\n    title,\r\n    writer,\r\n    category,\r\n    publisher,\r\n    almira,\r\n    shelf,\r\n    isbn,\r\n    totalPage,\r\n    yearOfPublication,\r\n    description,\r\n    price,\r\n  ) {\r\n    return {\r\n      id,\r\n      title,\r\n      writer,\r\n      category,\r\n      publisher,\r\n      almira,\r\n      shelf,\r\n      isbn,\r\n      totalPage,\r\n      yearOfPublication,\r\n      description,\r\n      price,\r\n     \r\n    };\r\n  }\r\n  const rows = [];\r\n  props.data.forEach((book) => {\r\n    rows.push(\r\n      createData(\r\n        book._id,\r\n        book.title,\r\n        book.writer,\r\n        book.category,\r\n        book.publisher,\r\n        book.almira,\r\n        book.shelf,\r\n        book.isbn,\r\n        book.totalPage,\r\n        book.yearOfPublication,\r\n        book.description,\r\n        book.price,\r\n      )\r\n    );\r\n    \r\n  });\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <container className=\"row\">\r\n        <Paper className={classes.root}>\r\n          <TableContainer className={classes.container}>\r\n            <Table stickyHeader aria-label=\"sticky table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  {columns.map((column) => (\r\n                    <TableCell\r\n                      key={column.id}\r\n                      align={column.align}\r\n                      style={{ minWidth: column.minWidth }}\r\n                    >\r\n                      {column.label}\r\n                    </TableCell>\r\n                  ))}\r\n                  <TableCell align=\"right\">More info</TableCell>\r\n                  <TableCell align=\"right\">Action</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              {props.loading === \"block\" ? (\r\n                <div className=\"load\">\r\n                  <Loading />\r\n                </div>\r\n              ) : (\r\n                <TableBody>\r\n                  {rows\r\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                      .map((row) => {\r\n                      // console.log(row)\r\n                      return (\r\n                        <TableRow\r\n                          hover\r\n                          role=\"checkbox\"\r\n                          tabIndex={-1}\r\n                          key={row.code}\r\n                        >\r\n                          {columns.map((column) => {\r\n                            const value = row[column.id];\r\n                            return (\r\n                              <TableCell key={column.id} align={column.align}>\r\n                                {column.format && typeof value === \"number\"\r\n                                  ? column.format(value)\r\n                                  : value}\r\n                              </TableCell>\r\n                            );\r\n                          })}\r\n                          <TableCell align=\"right\">\r\n                            <Link\r\n                              to=\"/more-info\"\r\n                              style={{ textDecoration: \"none\", color: \"black\" }}\r\n                            >\r\n                              <Button\r\n                                size=\"small\"\r\n                                variant=\"outlined\"\r\n                                onClick={() => {\r\n                                  setClickedBook(row);\r\n                                }}\r\n                              >\r\n                                More info\r\n                              </Button>\r\n                            </Link>\r\n                          </TableCell>\r\n                          <TableCell align=\"right\">\r\n                            <Link to=\"/edit-book\">\r\n                              <IconButton\r\n                                aria-label=\"edit\"\r\n                                onClick={() => {\r\n                                  setClickedBook(row);\r\n                                }}\r\n                                className={classes.margin}\r\n                              >\r\n                                <EditIcon fontSize=\"small\" />\r\n                              </IconButton>\r\n                            </Link>\r\n                            <IconButton\r\n                              aria-label=\"delete\"\r\n                              onClick={() => {\r\n                                // handleDelete(row.id);\r\n                                handleClickOpenDialogue();\r\n                              }}\r\n                              className={classes.margin}\r\n                            >\r\n                              <DeleteIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                            <Dialog\r\n                              open={openDialogue}\r\n                              TransitionComponent={Transition}\r\n                              keepMounted\r\n                              onClose={handleCloseDialogue}\r\n                              aria-labelledby=\"alert-dialog-slide-title\"\r\n                              aria-describedby=\"alert-dialog-slide-description\"\r\n                            >\r\n                              <DialogTitle id=\"alert-dialog-slide-title\">\r\n                                {\"Delete Book\"}\r\n                              </DialogTitle>\r\n                              <DialogContent>\r\n                                <DialogContentText id=\"alert-dialog-slide-description\">\r\n                                  Do you really want to delete this book?\r\n                                </DialogContentText>\r\n                              </DialogContent>\r\n                              <DialogActions>\r\n                                <Button\r\n                                  onClick={handleCloseDialogue}\r\n                                  color=\"primary\"\r\n                                >\r\n                                  No\r\n                                </Button>\r\n                                <Button\r\n                                  onClick={() => {\r\n                                    handleDelete(row.id);\r\n                                    \r\n                                  }}\r\n                                  color=\"primary\"\r\n                                >\r\n                                  Yes\r\n                                </Button>\r\n                              </DialogActions>\r\n                            </Dialog>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      );\r\n                    })}\r\n                </TableBody>\r\n              )}\r\n            </Table>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[10, 25, 100]}\r\n            component=\"div\"\r\n            count={rows.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n        </Paper>\r\n      </container>\r\n    </div>\r\n  );\r\n}\r\n\r\nStickyHeadTable.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n","E:\\Projects\\Library-Management-System-with-MERN\\frontend\\src\\components\\Search\\Search.js",["77"],"import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport * as ReactBootstrap from \"react-bootstrap\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"./Search.css\";\r\nimport axios from \"axios\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    marginTop: theme.spacing(2),\r\n    marginLeft: theme.spacing(5),\r\n    minWidth: 220,\r\n  },\r\n  keywordBox: {\r\n    padding: theme.spacing(0),\r\n    marginRight: theme.spacing(3),\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(2),\r\n    marginLeft: theme.spacing(5),\r\n    marginBottom: theme.spacing(3),\r\n    borderRadius: 4,\r\n    border: \"1px solid #757575\",\r\n    color: \"black\",\r\n    height: 56,\r\n    padding: \"0 40px\",\r\n    boxShadow: \"0 3px 5px 2px var(--box-shadow)\",\r\n  },\r\n}));\r\n\r\nconst Search = (props) => {\r\n  // const [data, setDisplayedBooks] =useContext(BookContext);\r\n  let { data, setDisplayedBooks } = props;\r\n  const classes = useStyles();\r\n  const [filterOption, setFilterOption] = useState();\r\n  const [autoCompleteValue, setAutoCompleteValue] = useState();\r\n  const [hint, setHint] = useState([]);\r\n  let searchResult;\r\n\r\n  const handleHint = (filter,keyword) => {\r\n    axios\r\n      .get(\"/books/:keyword\")\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setHint();\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const handleFilterSelection = (event) => {\r\n    setFilterOption(event.target.value);\r\n    const key = event.target.value;\r\n    console.log(key);\r\n    // let query = 'Allah'\r\n    // setHint(`${data}.slice(0, 300).map((item) => item.${key})`);\r\n    // const queryResult = data.filter(book => book.writer.includes(query) );\r\n    // console.log(queryResult)\r\n    // console.log(`data.slice(0, 300).map((item) => item.${key})`);\r\n    switch (key) {\r\n      case \"everywhere\":\r\n        setHint([]);\r\n        break;\r\n      case \"title\":\r\n        setHint(data.slice(0, 300).map((item) => item.title));\r\n        break;\r\n      case \"writer\":\r\n        setHint(data.slice(0, 300).map((item) => item.writer));\r\n        break;\r\n      case \"publisher\":\r\n        setHint(data.slice(0, 300).map((item) => item.publisher));\r\n        break;\r\n      case \"category\":\r\n        setHint(data.slice(0, 300).map((item) => item.category));\r\n        break;\r\n      case \"almira\":\r\n        setHint(data.slice(0, 300).map((item) => item.almira));\r\n        break;\r\n      case \"isbn\":\r\n        setHint(data.slice(0, 300).map((item) => item.isbn));\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  const handleAutoComplete = (value) => {\r\n    console.log(\"keyword for auto complete hint: \" + value);\r\n    setAutoCompleteValue(value)\r\n    // let match = data.slice(0, 300).includes(value);\r\n    // setHint(match)\r\n    // let matches = data.filter(book => {\r\n    //   const regex = new RegExp(`^${value}`, 'gi');\r\n    //   return book.writer.match(regex) || book.abbr.match(regex)\r\n    // })\r\n    // if (value.length === 0) {\r\n    //   matches=[]\r\n    // }\r\n    // let matches = data.writer.map((book) => book.includes(\"Allah\"));\r\n    // let x=matches.map(book => book.includes('Allah'))\r\n    // console.log(matches)\r\n    \r\n    // console.log(`data.slice(0, 300).map((item) => item.${key})`);\r\n    // switch (value) {\r\n    //   case \"everywhere\":\r\n    //     setHint([]);\r\n    //     break;\r\n    //   case \"title\":\r\n    //     setHint(data.slice(0, 300).map((item) => item.title));\r\n    //     break;\r\n    //   case \"writer\":\r\n    //     setHint(data.slice(0, 300).map((item) => item.writer));\r\n    //     break;\r\n    //   case \"publisher\":\r\n    //     setHint(data.slice(0, 300).map((item) => item.publisher));\r\n    //     break;\r\n    //   case \"category\":\r\n    //     setHint(data.slice(0, 300).map((item) => item.category));\r\n    //     break;\r\n    //   case \"almira\":\r\n    //     setHint(data.slice(0, 300).map((item) => item.almira));\r\n    //     break;\r\n    //   case \"isbn\":\r\n    //     setHint(data.slice(0, 300).map((item) => item.isbn));\r\n    //     break;\r\n    //   default:\r\n    //     break;\r\n    // }\r\n  }\r\n  const handleSearchResult = () => {\r\n    console.log(filterOption, autoCompleteValue);\r\n    // searchResult = data\r\n    //   .slice(0, 300)\r\n    //   .filter(`(item) => item.${filterOption} === ${autoCompleteValue}`);  \r\n    \r\n    switch (filterOption) {\r\n      case \"everywhere\":\r\n        searchResult = [];\r\n        break;\r\n      case \"title\":\r\n        searchResult = data\r\n          .slice(0, 300)\r\n          .filter((item) => item.title === autoCompleteValue);\r\n        break;\r\n      case \"writer\":\r\n        searchResult = data\r\n          .slice(0, 300)\r\n          .filter((item) => item.writer === autoCompleteValue);\r\n        break;\r\n      case \"publisher\":\r\n        searchResult = data\r\n          .slice(0, 300)\r\n          .filter((item) => item.publisher === autoCompleteValue);\r\n        break;\r\n      case \"category\":\r\n        searchResult = data\r\n          .slice(0, 300)\r\n          .filter((item) => item.category === autoCompleteValue);\r\n        break;\r\n      case \"almira\":\r\n        searchResult = data\r\n          .slice(0, 300)\r\n          .filter((item) => item.almira === autoCompleteValue);\r\n        break;\r\n      case \"isbn\":\r\n        searchResult = data\r\n          .slice(0, 300)\r\n          .filter((item) => item.isbn === autoCompleteValue);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    // console.log(searchResult);\r\n    // // getSearchResult(searchResult)\r\n    setDisplayedBooks(searchResult);\r\n  };\r\n\r\n  return (\r\n    <div className=\"pt-2\">\r\n      <br />\r\n      <ReactBootstrap.Container>\r\n        <ReactBootstrap.Row>\r\n          <ReactBootstrap.Col xs={12} sm={6} md={6} lg={4}>\r\n            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                Filter Option\r\n              </InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-outlined-label\"\r\n                id=\"demo-simple-select-outlined\"\r\n                onChange={handleFilterSelection}\r\n                label=\"Select Filter Option\"\r\n              >\r\n                {/* <MenuItem value={\"everywhere\"}>Search Everywhere</MenuItem> */}\r\n                <MenuItem value={\"title\"}>Book title</MenuItem>\r\n                <MenuItem value={\"writer\"}>Writer</MenuItem>\r\n                <MenuItem value={\"category\"}>Category</MenuItem>\r\n                <MenuItem value={\"publisher\"}>Publisher</MenuItem>\r\n                {/* <MenuItem value={\"almira\"}>Almira</MenuItem>\r\n                <MenuItem value={\"isbn\"}>ISBN</MenuItem> */}\r\n              </Select>\r\n            </FormControl>\r\n          </ReactBootstrap.Col>\r\n          <ReactBootstrap.Col xs={12} sm={6} md={6} lg={4}>\r\n            <Autocomplete\r\n              options={hint}\r\n              className={classes.keywordBox}\r\n              freeSolo\r\n              id=\"free-solo-2-demo\"\r\n              disableClearable\r\n              onChange={(event, newValue) => {\r\n                handleAutoComplete(newValue);\r\n              }}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Enter the keyword\"\r\n                  margin=\"normal\"\r\n                  variant=\"outlined\"\r\n                  onChange={(event) => {\r\n                    handleAutoComplete(event.target.value);\r\n                  }}\r\n                />\r\n              )}\r\n            />\r\n          </ReactBootstrap.Col>\r\n          <ReactBootstrap.Col xs={12} sm={12} md={12} lg={4}>\r\n            <Button className={classes.button} onClick={() => handleSearchResult()}>\r\n              Search\r\n            </Button>\r\n          </ReactBootstrap.Col>\r\n        </ReactBootstrap.Row>\r\n      </ReactBootstrap.Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n",["78","79"],"E:\\Projects\\Library-Management-System-with-MERN\\frontend\\src\\components\\Header\\Header.js",["80","81","82","83","84","85","86"],"import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport { FormGroup } from \"@material-ui/core\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\nimport { Router, Route, Link } from \"react-router-dom\";\r\nimport AddNewBook from \"../AddNewBook/AddNewBook\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport Add from \"../AddNewBook/AddNewBook.js\";\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: { width: \"inherit\" },\r\n  Link: {\r\n    textDecoration: \"none\",\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n\r\n  drawerHeader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n}));\r\n\r\nexport default function PersistentDrawerLeft() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const reload = () => {\r\n    window.location.reload(false);\r\n  }\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const [toogle,setToogle] = React.useState(true)\r\n  const handleChange = (event) => {\r\n    setToogle(event.target.checked)\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"absolute\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, open && classes.hide)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          {/* <Link\r\n            to=\"/\"\r\n            className={classes.link}\r\n            style={{ textDecoration: \"none\", color: \"white\" }}\r\n          > */}\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            <Link\r\n              to=\"/\"\r\n              onClick={reload}\r\n            className={classes.link}\r\n            style={{ textDecoration: \"none\", color: \"white\" }}\r\n          >\r\n              আব্দুল জলিল সাহিত্য ও সাংস্কৃতিক কেন্দ্র\r\n              </Link>\r\n            </Typography>\r\n          {/* </Link> */}\r\n          <FormGroup>\r\n            <FormControlLabel\r\n              control={<Switch checked={toogle} onChange={handleChange} />}\r\n              label={toogle ? \"বই\" : \"ডিস্ক\"}\r\n            />\r\n          </FormGroup>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === \"ltr\" ? (\r\n              <ChevronLeftIcon />\r\n            ) : (\r\n              <ChevronRightIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n\r\n        <Divider />\r\n\r\n        <List>\r\n          <Link\r\n            onClick={handleDrawerClose}\r\n            style={{ textDecoration: \"none\", color: \"black\" }}\r\n            to=\"/\"\r\n            className={classes.link}\r\n          >\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                <HomeIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary={\"Home\"} />\r\n            </ListItem>\r\n          </Link>\r\n          <Link\r\n            onClick={handleDrawerClose}\r\n            style={{ textDecoration: \"none\", color: \"black\" }}\r\n            to=\"/add-new-book\"\r\n          >\r\n            <ListItem button key=\"Add new book\">\r\n              <ListItemIcon>\r\n                <AddCircleOutlineIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Add new book\" />\r\n            </ListItem>\r\n          </Link>\r\n\r\n          <Link\r\n            onClick={handleDrawerClose}\r\n            style={{ textDecoration: \"none\", color: \"black\" }}\r\n            to=\"/about\"\r\n            className={classes.link}\r\n          >\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                <InfoIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary={\"About\"} />\r\n            </ListItem>\r\n          </Link>\r\n        </List>\r\n      </Drawer>\r\n      <main\r\n        className={clsx(classes.content, {\r\n          [classes.contentShift]: open,\r\n        })}\r\n      ></main>\r\n    </div>\r\n  );\r\n}\r\n","E:\\Projects\\Library-Management-System-with-MERN\\frontend\\src\\components\\Loading\\Loading.js",[],"E:\\Projects\\Library-Management-System-with-MERN\\frontend\\src\\components\\Details\\Details.js",[],"E:\\Projects\\Library-Management-System-with-MERN\\frontend\\src\\components\\Pages\\Grid.js",[],["87","88"],"E:\\Projects\\Library-Management-System-with-MERN\\frontend\\src\\components\\AddNewBook\\AddNewBook.js",["89","90","91"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Form, Field } from \"react-final-form\";\r\nimport { TextField } from \"final-form-material-ui\";\r\nimport {\r\n  Typography,\r\n  Paper,\r\n  Link,\r\n  Grid,\r\n  Button,\r\n  CssBaseline,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\n\r\nconst onSubmit = async (values) => {\r\n  const sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\r\n  await sleep(300);\r\n  window.alert(JSON.stringify(values, 0, 2));\r\n  console.log(values);\r\n  // axios\r\n  //   .post(\"http://localhost:5000/add-new-book\", {values})\r\n  //   .then((res) => {\r\n  //     console.log(res)\r\n  //     window.alert(res.title + \" added to database!\");\r\n  //   })\r\n  //   .catch((err) => console.log(err));\r\n\r\n  fetch(\"http://localhost:5000/add-new-book\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(values),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n      console.log(data);\r\n      window.alert(data.title+ \" added to database!\");\r\n    });\r\n};\r\nconst validate = (values) => {\r\n  const errors = {};\r\n  if (!values.title) {\r\n    errors.title = \"Required\";\r\n  }\r\n  if (!values.writer) {\r\n    errors.writer = \"Required\";\r\n  }\r\n  if (!values.category) {\r\n    errors.email = \"Required\";\r\n  }\r\n  if (!values.publisher) {\r\n    errors.publisher = \"Required\";\r\n  }\r\n  return errors;\r\n};\r\nconst postNewBook = async (values) => {\r\n  console.log({ values });\r\n};\r\nfunction Add() {\r\n  return (\r\n    <div style={{ padding: 16, margin: \"auto\", maxWidth: 600 }}>\r\n      <CssBaseline />\r\n      <br />\r\n      <Typography variant=\"h4\" align=\"center\" component=\"h1\" gutterBottom>\r\n        নতুন বই এর তথ্য দিন\r\n      </Typography>\r\n\r\n      <Form\r\n        onSubmit={onSubmit}\r\n        validate={validate}\r\n        render={({ handleSubmit, reset, submitting, pristine, values }) => (\r\n          <form onSubmit={handleSubmit} noValidate>\r\n            <Paper style={{ padding: 16 }}>\r\n              <Grid\r\n                style={{ padding: 10, margin: \"auto\", maxWidth: 400 }}\r\n                container\r\n                alignItems=\"flex-start\"\r\n                spacing={2}\r\n              >\r\n                <Grid item xs={12} lg={12}>\r\n                  <Field\r\n                    fullWidth\r\n                    required\r\n                    name=\"title\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"বইয়ের নাম\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} lg={12}>\r\n                  <Field\r\n                    fullWidth\r\n                    required\r\n                    name=\"writer\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"লেখক/লেখিকা\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} lg={12}>\r\n                  <Field\r\n                    fullWidth\r\n                    required\r\n                    name=\"category\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"ক্যাটাগরি\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} lg={12}>\r\n                  <Field\r\n                    fullWidth\r\n                    required\r\n                    name=\"publisher\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"প্রকাশনী\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} lg={12}>\r\n                  <Field\r\n                    fullWidth\r\n                    name=\"description\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"সংক্ষিপ্ত বর্ণ্না\"\r\n                    multiline\r\n                    rows={4}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <Field\r\n                    id=\"standard-basic\"\r\n                    label=\"আলমারি নং\"\r\n                    name=\"almira\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <Field\r\n                    id=\"standard-basic\"\r\n                    label=\"তাক নং\"\r\n                    name=\"shelf\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={6}>\r\n                  <Field\r\n                    id=\"standard-basic\"\r\n                    label=\"আইএসবিএন\"\r\n                    name=\"isbn\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <Field\r\n                    id=\"standard-basic\"\r\n                    label=\"প্রকাশের সাল\"\r\n                    name=\"yearOfPublication\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <Field\r\n                    id=\"standard-basic\"\r\n                    label=\"মোট পৃষ্ঠা সংখ্যা\"\r\n                    name=\"totalPage\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <Field\r\n                    id=\"standard-basic\"\r\n                    label=\"দাম\"\r\n                    name=\"price\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                  />\r\n                </Grid>\r\n                <Grid item style={{ marginTop: 16 }}>\r\n                  <Button\r\n                    type=\"button\"\r\n                    variant=\"contained\"\r\n                    onClick={reset}\r\n                    disabled={submitting || pristine}\r\n                  >\r\n                    Reset\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item style={{ marginTop: 16 }}>\r\n                  <Link to={\"/post-new-book\"}>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      type=\"submit\"\r\n                      disabled={submitting}\r\n                    >\r\n                      Submit\r\n                    </Button>\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </Paper>\r\n          </form>\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Add;\r\n","E:\\Projects\\Library-Management-System-with-MERN\\frontend\\src\\components\\Search\\Search2.js",["92","93"],"import { Button, Grid, TextField } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { useState } from \"react\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  formControl: {\r\n    \r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marginLeft: \"20%\",\r\n      marginBottom: \"15px\",\r\n      minWidth: 220,\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginBottom: \"15px\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      marginLeft: \"35%\",\r\n      marginBottom: \"15px\",\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      marginLeft: \"auto\",\r\n      marginBottom: \"15px\",\r\n    },\r\n  },\r\n  button: {\r\n    borderRadius: 4,\r\n    height: 56,\r\n    padding: \"0 40px\",\r\n    boxShadow: \"0 3px 5px 2px var(--box-shadow)\",\r\n  },\r\n  keywordBox: {\r\n    minWidth: 220,\r\n    padding: \"0 40px\",\r\n  },\r\n}));\r\nconst Search2 = (props) => {\r\n  let { data, setDisplayedBooks } = props;\r\n  const classes = useStyles();\r\n   const [autoCompleteValue, setAutoCompleteValue] = useState(\"\");\r\n  let filter;\r\n  const [filterOption, setFilterOption] = useState();\r\n  const [hint, setHint] = useState([]);\r\n  \r\n\r\n  const handleFilterSelection = (event) => {\r\n    setFilterOption(event.target.value);\r\n\r\n    // data.find(\r\n    //   { writer: { $regex: \"All\", $options: \"i\" } },\r\n    //   function (err, docs) {}\r\n    // );\r\n    // console.log(search('Alla'));\r\n    const key = event.target.value;\r\n    console.log(`data.slice(0, 300).map((item) => item.${key})`);\r\n    switch (key) {\r\n      case \"everywhere\":\r\n        setHint([]);\r\n        break;\r\n      case \"title\":\r\n        setHint(data.slice(0, 300).map((item) => item.title));\r\n        break;\r\n      case \"writer\":\r\n        setHint(data.slice(0, 300).map((item) => item.writer));\r\n        break;\r\n      case \"publisher\":\r\n        setHint(data.slice(0, 300).map((item) => item.publisher));\r\n        break;\r\n      case \"category\":\r\n        setHint(data.slice(0, 300).map((item) => item.category));\r\n        break;\r\n      case \"almira\":\r\n        setHint(data.slice(0, 300).map((item) => item.almira));\r\n        break;\r\n      case \"isbn\":\r\n        setHint(data.slice(0, 300).map((item) => item.isbn));\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container fixed>\r\n      <Grid justify=\"center\">\r\n        <Grid item xs={12} sm={6} md={6} lg={4}>\r\n          <FormControl variant=\"outlined\" className={classes.formControl}>\r\n            <InputLabel id=\"demo-simple-select-outlined-label\">\r\n              Select Filter Option\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-outlined-label\"\r\n              id=\"demo-simple-select-outlined\"\r\n              value={filter}\r\n              onChange={handleFilterSelection}\r\n              label=\"Select Filter Option \"\r\n            >\r\n              {/* <MenuItem value={\"everywhere\"}>Search Everywhere</MenuItem> */}\r\n              <MenuItem value={\"title\"}>Book title</MenuItem>\r\n              <MenuItem value={\"writer\"}>Writer</MenuItem>\r\n              <MenuItem value={\"category\"}>Category</MenuItem>\r\n              <MenuItem value={\"publisher\"}>Publisher</MenuItem>\r\n              {/* <MenuItem value={\"almira\"}>Almira</MenuItem>\r\n                <MenuItem value={\"isbn\"}>ISBN</MenuItem> */}\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} md={6} lg={4}>\r\n          <Autocomplete\r\n            className={classes.formControl}\r\n            onChange={(event, value) => setAutoCompleteValue(value)}\r\n            options={hint}\r\n            // filterOptions={(options, state) => options}\r\n            // className={classes.keywordBox}\r\n            freeSolo\r\n            id=\"free-solo-2-demo\"\r\n            disableClearable\r\n            // options={data.map((item) => item.title)}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Enter the keyword\"\r\n                variant=\"outlined\"\r\n                value={autoCompleteValue}\r\n                // onChange={handleAutoCompleteOnChange}\r\n              />\r\n            )}\r\n          />\r\n        </Grid>\r\n        <Grid className={classes.formControl} item xs={12} sm={6} md={6} lg={4}>\r\n          <Button className={classes.button} size=\"large\" variant=\"outlined\">\r\n            Search\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Search2;","E:\\Projects\\Library-Management-System-with-MERN\\frontend\\src\\components\\MoreInfo\\MoreInfo.js",["94","95","96","97","98"],"import React from 'react';\r\nimport {\r\n  Typography,\r\n  Paper,\r\n  Link,\r\n  Grid,\r\n  Button,\r\n  CssBaseline,\r\n} from \"@material-ui/core\";\r\nconst MoreInfo = (props) => {\r\n    let {\r\n      title,\r\n      writer,\r\n      category,\r\n      publisher,\r\n      almira,\r\n      shelf,\r\n      isbn,\r\n      totalPage,\r\n      yearOfPublication,\r\n      description,\r\n    price } = props.clickedBook;\r\n  console.log(title);\r\n    return (\r\n      <div style={{ padding: 16, margin: \"auto\", maxWidth: 700 }}>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <Paper style={{ padding: 16, textAlign: \"center\", lineHeight: \"22px\"}}>\r\n          <h4>বইয়ের নামঃ {title}</h4>\r\n          <h4>লেখক/লেখিকাঃ {writer}</h4>\r\n          <h6>ক্যাটাগরিঃ {category}</h6>\r\n          <h6>প্রকাশনীঃ {publisher}</h6>\r\n          <h6>আলমারি নং {almira}</h6>\r\n          <h6>তাক নং {shelf}</h6>\r\n          <h6>সংক্ষিপ্ত বিবরনীঃ {description}</h6>\r\n          <h6>প্রকাশকাল(সাল) ঃ {yearOfPublication}</h6>\r\n          <h6>আইএসবিএনঃ {isbn}</h6>\r\n          <h6>মোট পৃষ্ঠাসংখ্যাঃ {totalPage}</h6>\r\n          <h6>দামঃ {price}</h6>\r\n        </Paper>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default MoreInfo;","E:\\Projects\\Library-Management-System-with-MERN\\frontend\\src\\components\\Search\\Search3.js",["99","100","101"],"import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport * as ReactBootstrap from \"react-bootstrap\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"./Search.css\";\r\nimport axios from \"axios\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    marginTop: theme.spacing(2),\r\n    marginLeft: theme.spacing(5),\r\n    minWidth: 220,\r\n  },\r\n  keywordBox: {\r\n    padding: theme.spacing(0),\r\n    marginRight: theme.spacing(3),\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(2),\r\n    marginLeft: theme.spacing(5),\r\n    marginBottom: theme.spacing(3),\r\n    borderRadius: 4,\r\n    border: \"1px solid #757575\",\r\n    color: \"black\",\r\n    height: 56,\r\n    padding: \"0 40px\",\r\n    boxShadow: \"0 3px 5px 2px var(--box-shadow)\",\r\n  },\r\n}));\r\n\r\nconst Search = (props) => {\r\n  // const [data, setDisplayedBooks] =useContext(BookContext);\r\n  let { data, setDisplayedBooks } = props;\r\n  const classes = useStyles();\r\n  const [filterOption, setFilterOption] = useState();\r\n  const [autoCompleteValue, setAutoCompleteValue] = useState();\r\n  const [hint, setHint] = useState([]);\r\n  let searchResult;\r\n\r\n  const handleHint = (filterOption, keyword) => {\r\n    if (keyword === \"\") {\r\n      setHint([])\r\n      return;\r\n    }\r\n    \r\n    axios\r\n      .get(\"/books/hints/\"+filterOption+\"/\"+keyword)\r\n      .then((response) => {\r\n        // console.log(response.data.slice(0, 5));\r\n        setHint(response.data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  \r\n  const handleSearchResult = () => {\r\n    console.log(filterOption, autoCompleteValue);\r\n    axios\r\n      .get(\"/books/searchResult/\" + filterOption + \"/\" + autoCompleteValue)\r\n      .then((response) => {\r\n        console.log(response);\r\n        // setDisplayedBooks(response.data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n    // searchResult = data\r\n    //   .slice(0, 300)\r\n    //   .filter(`(item) => item.${filterOption} === ${autoCompleteValue}`);  \r\n    \r\n    // switch (filterOption) {\r\n    //   // case \"everywhere\":\r\n    //   //   searchResult = [];\r\n    //   //   break;\r\n    //   case \"title\":\r\n    //     searchResult = data\r\n    //       .filter((item) => item.title === autoCompleteValue);\r\n    //     break;\r\n    //   case \"writer\":\r\n    //     searchResult = data\r\n    //       .filter((item) => item.writer === autoCompleteValue);\r\n    //     break;\r\n    //   case \"publisher\":\r\n    //     searchResult = data\r\n    //       .filter((item) => item.publisher === autoCompleteValue);\r\n    //     break;\r\n    //   case \"category\":\r\n    //     searchResult = data\r\n    //       .filter((item) => item.category === autoCompleteValue);\r\n    //     break;\r\n    //   case \"almira\":\r\n    //     searchResult = data\r\n    //       .filter((item) => item.almira === autoCompleteValue);\r\n    //     break;\r\n    //   case \"isbn\":\r\n    //     searchResult = data\r\n    //       .filter((item) => item.isbn === autoCompleteValue);\r\n    //     break;\r\n    //   default:\r\n    //     break;\r\n    // }\r\n    // console.log(searchResult);\r\n    // // // getSearchResult(searchResult)\r\n    // setDisplayedBooks(searchResult);\r\n  };\r\n\r\n  return (\r\n    <div className=\"pt-2\">\r\n      <br />\r\n      <ReactBootstrap.Container>\r\n        <ReactBootstrap.Row>\r\n          <ReactBootstrap.Col xs={12} sm={6} md={6} lg={4}>\r\n            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                Filter Option\r\n              </InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-outlined-label\"\r\n                id=\"demo-simple-select-outlined\"\r\n                onChange={(event) => {setFilterOption(event.target.value)                }}\r\n                label=\"Select Filter Option\"\r\n              >\r\n                {/* <MenuItem value={\"everywhere\"}>Search Everywhere</MenuItem> */}\r\n                <MenuItem value={\"title\"}>Book title</MenuItem>\r\n                <MenuItem value={\"writer\"}>Writer</MenuItem>\r\n                <MenuItem value={\"category\"}>Category</MenuItem>\r\n                <MenuItem value={\"publisher\"}>Publisher</MenuItem>\r\n                {/* <MenuItem value={\"almira\"}>Almira</MenuItem>\r\n                <MenuItem value={\"isbn\"}>ISBN</MenuItem> */}\r\n              </Select>\r\n            </FormControl>\r\n          </ReactBootstrap.Col>\r\n          <ReactBootstrap.Col xs={12} sm={6} md={6} lg={4}>\r\n            <Autocomplete\r\n              options={hint}\r\n              className={classes.keywordBox}\r\n              freeSolo\r\n              id=\"free-solo-2-demo\"\r\n              disableClearable\r\n              onChange={(event, newValue) => {\r\n                setAutoCompleteValue(newValue);\r\n              }}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Enter the keyword\"\r\n                  margin=\"normal\"\r\n                  variant=\"outlined\"\r\n                  onChange={(event) => {\r\n                    // setAutoCompleteValue(event.target.value)\r\n                    console.log(filterOption, event.target.value);\r\n                    handleHint(filterOption,event.target.value);\r\n                  }}\r\n                />\r\n              )}\r\n            />\r\n          </ReactBootstrap.Col>\r\n          <ReactBootstrap.Col xs={12} sm={12} md={12} lg={4}>\r\n            <Button className={classes.button} onClick={() => handleSearchResult()}>\r\n              Search\r\n            </Button>\r\n          </ReactBootstrap.Col>\r\n        </ReactBootstrap.Row>\r\n      </ReactBootstrap.Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","E:\\Projects\\Library-Management-System-with-MERN\\frontend\\src\\components\\EditBook\\EditBook.js",["102","103","104","105","106","107","108","109","110"],"E:\\Projects\\Library-Management-System-with-MERN\\frontend\\src\\components\\EditBook\\EditBook2.js",["111","112","113","114","115","116","117","118","119"],{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":10,"column":8,"nodeType":"126","messageId":"127","endLine":10,"endColumn":15},{"ruleId":"128","severity":1,"message":"129","line":35,"column":6,"nodeType":"130","endLine":35,"endColumn":8,"suggestions":"131"},{"ruleId":"124","severity":1,"message":"132","line":1,"column":17,"nodeType":"126","messageId":"127","endLine":1,"endColumn":25},{"ruleId":"124","severity":1,"message":"133","line":11,"column":13,"nodeType":"126","messageId":"127","endLine":11,"endColumn":27},{"ruleId":"124","severity":1,"message":"134","line":13,"column":8,"nodeType":"126","messageId":"127","endLine":13,"endColumn":15},{"ruleId":"124","severity":1,"message":"135","line":15,"column":8,"nodeType":"126","messageId":"127","endLine":15,"endColumn":15},{"ruleId":"124","severity":1,"message":"136","line":47,"column":9,"nodeType":"126","messageId":"127","endLine":47,"endColumn":19},{"ruleId":"120","replacedBy":"137"},{"ruleId":"122","replacedBy":"138"},{"ruleId":"124","severity":1,"message":"139","line":18,"column":8,"nodeType":"126","messageId":"127","endLine":18,"endColumn":17},{"ruleId":"124","severity":1,"message":"140","line":19,"column":8,"nodeType":"126","messageId":"127","endLine":19,"endColumn":16},{"ruleId":"124","severity":1,"message":"141","line":24,"column":10,"nodeType":"126","messageId":"127","endLine":24,"endColumn":16},{"ruleId":"124","severity":1,"message":"142","line":24,"column":18,"nodeType":"126","messageId":"127","endLine":24,"endColumn":23},{"ruleId":"124","severity":1,"message":"143","line":25,"column":8,"nodeType":"126","messageId":"127","endLine":25,"endColumn":18},{"ruleId":"124","severity":1,"message":"144","line":26,"column":10,"nodeType":"126","messageId":"127","endLine":26,"endColumn":30},{"ruleId":"124","severity":1,"message":"145","line":29,"column":8,"nodeType":"126","messageId":"127","endLine":29,"endColumn":11},{"ruleId":"120","replacedBy":"146"},{"ruleId":"122","replacedBy":"147"},{"ruleId":"124","severity":1,"message":"148","line":2,"column":8,"nodeType":"126","messageId":"127","endLine":2,"endColumn":16},{"ruleId":"124","severity":1,"message":"149","line":13,"column":8,"nodeType":"126","messageId":"127","endLine":13,"endColumn":13},{"ruleId":"124","severity":1,"message":"150","line":57,"column":7,"nodeType":"126","messageId":"127","endLine":57,"endColumn":18},{"ruleId":"124","severity":1,"message":"151","line":47,"column":15,"nodeType":"126","messageId":"127","endLine":47,"endColumn":32},{"ruleId":"124","severity":1,"message":"152","line":51,"column":10,"nodeType":"126","messageId":"127","endLine":51,"endColumn":22},{"ruleId":"124","severity":1,"message":"153","line":3,"column":3,"nodeType":"126","messageId":"127","endLine":3,"endColumn":13},{"ruleId":"124","severity":1,"message":"154","line":5,"column":3,"nodeType":"126","messageId":"127","endLine":5,"endColumn":7},{"ruleId":"124","severity":1,"message":"155","line":6,"column":3,"nodeType":"126","messageId":"127","endLine":6,"endColumn":7},{"ruleId":"124","severity":1,"message":"156","line":7,"column":3,"nodeType":"126","messageId":"127","endLine":7,"endColumn":9},{"ruleId":"124","severity":1,"message":"157","line":8,"column":3,"nodeType":"126","messageId":"127","endLine":8,"endColumn":14},{"ruleId":"124","severity":1,"message":"158","line":40,"column":9,"nodeType":"126","messageId":"127","endLine":40,"endColumn":13},{"ruleId":"124","severity":1,"message":"151","line":40,"column":15,"nodeType":"126","messageId":"127","endLine":40,"endColumn":32},{"ruleId":"124","severity":1,"message":"159","line":45,"column":7,"nodeType":"126","messageId":"127","endLine":45,"endColumn":19},{"ruleId":"124","severity":1,"message":"148","line":2,"column":8,"nodeType":"126","messageId":"127","endLine":2,"endColumn":16},{"ruleId":"124","severity":1,"message":"149","line":12,"column":8,"nodeType":"126","messageId":"127","endLine":12,"endColumn":13},{"ruleId":"124","severity":1,"message":"160","line":69,"column":5,"nodeType":"126","messageId":"127","endLine":69,"endColumn":11},{"ruleId":"124","severity":1,"message":"161","line":70,"column":5,"nodeType":"126","messageId":"127","endLine":70,"endColumn":10},{"ruleId":"124","severity":1,"message":"162","line":71,"column":5,"nodeType":"126","messageId":"127","endLine":71,"endColumn":9},{"ruleId":"124","severity":1,"message":"163","line":72,"column":5,"nodeType":"126","messageId":"127","endLine":72,"endColumn":14},{"ruleId":"124","severity":1,"message":"164","line":73,"column":5,"nodeType":"126","messageId":"127","endLine":73,"endColumn":22},{"ruleId":"124","severity":1,"message":"165","line":74,"column":5,"nodeType":"126","messageId":"127","endLine":74,"endColumn":16},{"ruleId":"124","severity":1,"message":"166","line":75,"column":5,"nodeType":"126","messageId":"127","endLine":75,"endColumn":10},{"ruleId":"124","severity":1,"message":"148","line":2,"column":8,"nodeType":"126","messageId":"127","endLine":2,"endColumn":16},{"ruleId":"124","severity":1,"message":"149","line":13,"column":8,"nodeType":"126","messageId":"127","endLine":13,"endColumn":13},{"ruleId":"124","severity":1,"message":"160","line":42,"column":5,"nodeType":"126","messageId":"127","endLine":42,"endColumn":11},{"ruleId":"124","severity":1,"message":"161","line":43,"column":5,"nodeType":"126","messageId":"127","endLine":43,"endColumn":10},{"ruleId":"124","severity":1,"message":"162","line":44,"column":5,"nodeType":"126","messageId":"127","endLine":44,"endColumn":9},{"ruleId":"124","severity":1,"message":"163","line":45,"column":5,"nodeType":"126","messageId":"127","endLine":45,"endColumn":14},{"ruleId":"124","severity":1,"message":"164","line":46,"column":5,"nodeType":"126","messageId":"127","endLine":46,"endColumn":22},{"ruleId":"124","severity":1,"message":"165","line":47,"column":5,"nodeType":"126","messageId":"127","endLine":47,"endColumn":16},{"ruleId":"124","severity":1,"message":"166","line":48,"column":5,"nodeType":"126","messageId":"127","endLine":48,"endColumn":10},"no-native-reassign",["167"],"no-negated-in-lhs",["168"],"no-unused-vars","'Search2' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'data' and 'searchedBooks'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setDisplayedBooks' needs the current value of 'data'.","ArrayExpression",["169"],"'useState' is defined but never used.","'ReactBootstrap' is defined but never used.","'Details' is defined but never used.","'Popover' is defined but never used.","'handleHint' is assigned a value but never used.",["167"],["168"],"'InboxIcon' is defined but never used.","'MailIcon' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'AddNewBook' is defined but never used.","'createBrowserHistory' is defined but never used.","'Add' is defined but never used.",["167"],["168"],"'ReactDOM' is defined but never used.","'axios' is defined but never used.","'postNewBook' is assigned a value but never used.","'setDisplayedBooks' is assigned a value but never used.","'filterOption' is assigned a value but never used.","'Typography' is defined but never used.","'Link' is defined but never used.","'Grid' is defined but never used.","'Button' is defined but never used.","'CssBaseline' is defined but never used.","'data' is assigned a value but never used.","'searchResult' is defined but never used.","'almira' is assigned a value but never used.","'shelf' is assigned a value but never used.","'isbn' is assigned a value but never used.","'totalPage' is assigned a value but never used.","'yearOfPublication' is assigned a value but never used.","'description' is assigned a value but never used.","'price' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"170","fix":"171"},"Update the dependencies array to be: [data, searchedBooks]",{"range":"172","text":"173"},[1234,1236],"[data, searchedBooks]"]